{"version":3,"sources":["images/header-logo.svg","components/Header.js","images/update-avatar.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/constants.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/auth.js","components/ProtectedRoute.js","components/InfoTooltip.js","images/sucess.svg","images/fail.svg","components/Login.js","components/Register.js","components/App.js","utils/keycode.js","reportWebVitals.js","index.js"],"names":["Header","email","onSignOut","className","src","mestoLogo","alt","path","to","exact","onClick","UserContext","React","createContext","Card","item","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","type","name","id","length","Main","props","style","backgroundImage","avatar","onEditAvatar","pencil","onEditProfile","about","onAddPlace","cards","map","Footer","ImagePopup","card","onPopupOverlayClose","onClose","options","url","headers","authorization","api","this","_url","_headers","fetch","res","ok","json","Promise","reject","Error","status","authentication","then","_getServerData","all","getProfileData","getInitialCards","formData","method","body","JSON","stringify","cardId","PopupWithForm","isOpen","title","onSubmit","noValidate","children","value","button","EditProfilePopup","useState","setName","setTitle","useEffect","e","preventDefault","onUpdateUser","placeholder","onChange","target","minLength","maxLength","required","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","aboutRef","nameRef","BASE_URL","ProtectedRoute","Component","component","loggedIn","InfoTooltip","Login","handleLogin","setEmail","password","setPassword","evt","Register","handleRegister","App","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isSuccessTooltipOpen","setIsSuccessTooltipOpen","isFailTooltipOpen","setIsFailTooltipOpen","setLoggedIn","history","useHistory","selectedCard","setSelectedCard","setCards","handleOverlayClose","classList","contains","closeAllPopups","handleLoggedIn","getAllData","response","userData","cardsData","catch","err","console","log","token","localStorage","getItem","auth","data","push","Provider","onKeyDown","keyCode","tabIndex","removeItem","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","setTimeout","setItem","saveEditedInfo","updateAvatar","addNewCard","sucess","fail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9bc63c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.c2821b38.svg\";","import mestoLogo from \"../images/header-logo.svg\";\r\nimport React from 'react';\r\nimport {Link, Route} from 'react-router-dom';\r\n\r\nfunction Header({email, onSignOut}) {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={mestoLogo} alt=\"Логотип место\"/>\r\n            <div className=\"header__auth\">\r\n                <Route path=\"/sign-in\">\r\n                    <Link to='sign-up' className='header__auth_link'>Регистрация</Link>\r\n                </Route>\r\n                <Route path=\"/sign-up\">\r\n                    <Link to='sign-in' className='header__auth_link'>Войти</Link>\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                    <div className='header__menu'>\r\n                        <p className='header__email'>{email}</p>\r\n                        <button className='header__button' onClick={onSignOut}>Выйти</button>\r\n                    </div>\r\n\r\n                </Route>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/update-avatar.ae1a976d.svg\";","import React from 'react'\r\n\r\nexport const UserContext = React.createContext();","import React, {useContext}from \"react\";\r\nimport {UserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card({item, onCardClick, onCardLike, onCardDelete}) {\r\n    const currentUser = useContext(UserContext);\r\n    function handleClick() {\r\n        onCardClick(item);\r\n    }\r\n    function handleLikeClick() {\r\n        onCardLike(item);\r\n    }\r\n    function handleLikeDelete() {\r\n        onCardDelete(item);\r\n    }\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = item.owner._id === currentUser._id;\r\n\r\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n        `element__button-trash ${isOwn ? 'element__button-trash_visible' : ''}`\r\n    );\r\n    const isLiked = item.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName  = (\r\n        `element__button-like ${isLiked ? 'element__button-like_active' : ''}`\r\n    );\r\n    return (\r\n        <li className=\"element\">\r\n            <img className=\"element__image\" src={item.link} onClick={handleClick} alt=\"#\" />\r\n            <button className={cardDeleteButtonClassName} onClick={handleLikeDelete} type=\"button\" />\r\n            <div className=\"element__name-place\">\r\n                <h2 className=\"element__name-title\">{item.name}</h2>\r\n                <div className=\"element__like\">\r\n                    <button id=\"likeButton\" className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\" />\r\n                    <p className=\"element__like-counter\">{item.likes.length}</p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\nexport default Card","import React, {useContext} from \"react\";\r\nimport pencil from \"../images/update-avatar.svg\";\r\nimport Card from \"./Card\";\r\nimport {UserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = useContext(UserContext);\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__image\" style={{backgroundImage: `url(${currentUser.avatar})`}}\r\n                         onClick={props.onEditAvatar}>\r\n                    </div>\r\n                    <img className=\"profile__image-hover\" src={pencil} alt=\"Карандаш\"/>\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button className=\"profile__edit\" type=\"button\" onClick={props.onEditProfile} />\r\n                        <h2 className=\"profile__title\">{currentUser.about}</h2>\r\n                    </div>\r\n                </div>\r\n                <button className=\"profile__add\" type=\"button\" onClick={props.onAddPlace} />\r\n            </section>\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__list\">\r\n                    {props.cards.map((item) => <Card key={item._id} item={item} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>)}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main\r\n\r\n","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer","function ImagePopup(props) {\r\n\r\n    return (\r\n        <div className={props.card ? `popup popup_image popup_opened` : `popup popup_image`}\r\n             onClick={props.onPopupOverlayClose}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__close popup__close_image\" type=\"button\" onClick={props.onClose}/>\r\n                <img className=\"popup__image-full\" src={props.card.link} alt=\"Фотография\"/>\r\n                <p className=\"popup__image-sign\">{props.card.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup","//конфиг валидации\r\nexport const validationConfig = {\r\n    formSelector: '.popup__fields',\r\n    inputSelector: '.popup__field',\r\n    submitButtonSelector: '.popup__button',\r\n    inputInvalidClass: 'popup__field_invalid',\r\n    inputErrorClass: 'popup__field-error',\r\n    buttonInvalidClass: 'popup__button_inactive',\r\n};\r\n\r\n//идентификация для Api\r\n\r\nconst options = {\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-19/',\r\n    headers: {\r\n        authorization: '34fdcd7c-5eb8-4424-b9a2-100499773e16',\r\n        'Content-Type': 'application/json',\r\n    }\r\n}\r\nexport default options;","import options from './constants'\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._url = options.url;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    authentication(name) {\r\n        return fetch(`${this._url}${name}`, {\r\n            headers: this._headers,\r\n        });\r\n    }\r\n\r\n    _getServerData(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n    }\r\n\r\n    getInitialCards() {\r\n        return this.authentication('cards')\r\n            .then(res => this._getServerData(res));\r\n    }\r\n\r\n    getProfileData() {\r\n        return this.authentication('users/me')\r\n            .then(res => this._getServerData(res));\r\n    }\r\n\r\n    getAllData() {\r\n        return Promise.all([this.getProfileData(), this.getInitialCards()]);\r\n    }\r\n\r\n    saveEditedInfo(formData) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                about: formData.about\r\n            })\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n\r\n    addNewCard(item) {\r\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-19/cards`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: item.name,\r\n                link: item.link\r\n            })\r\n        }).then(res => this._getServerData(res));\r\n\r\n    }\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        if (isLiked) {\r\n            return fetch(`${this._url}cards/likes/${cardId}`,{\r\n                method: \"PUT\",\r\n                headers: this._headers,\r\n            }).then(res => this._getServerData(res));\r\n        }\r\n        else {\r\n            return fetch(`${this._url}cards/likes/${cardId}`,{\r\n                method: \"DELETE\",\r\n                headers: this._headers\r\n            }).then(res => this._getServerData(res));\r\n        }\r\n\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}cards/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n\r\n    updateAvatar(avatar) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify(avatar)\r\n        }).then(res => this._getServerData(res));\r\n    }\r\n}\r\n\r\nconst api = new Api(options);\r\n\r\nexport default api;","function PopupWithForm(props) {\r\n    return (\r\n        <div className={props.isOpen ? `popup popup_${props.name} popup_opened` : `popup popup_${props.name}`}\r\n             onClick={props.onPopupOverlayClose}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__close\" type=\"button\" onClick={props.onClose}/>\r\n                <div className=\"popup__area\">\r\n                    <h2 className=\"popup__title\">{`${props.title}`}</h2>\r\n\r\n                    <form className={`popup__fields popup__fields_${props.name}`} onSubmit={props.onSubmit}\r\n                          name=\"popups\" noValidate>\r\n                        {props.children}\r\n                        <button className=\"popup__button popup__button_edit-profile popup__button_active\"\r\n                                type=\"submit\"\r\n                                value=\"Сохранить\">{props.button}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm\r\n\r\n","import React, {useContext} from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {UserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nexport default function EditProfilePopup (props) {\r\n    const currentUser = useContext(UserContext);\r\n\r\n    const [name, setName] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    function nameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n    function titleChange(e) {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setName(currentUser.name);\r\n        setTitle(currentUser.about);\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser ({\r\n            name,\r\n            about: title,\r\n        });\r\n    }\r\n    return (\r\n        <PopupWithForm id='popupEdit' title='Редактировать профиль' name='edit-profile' button = 'Сохранить'\r\n                       isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} onPopupOverlayClose={props.onPopupOverlayClose}>\r\n            <input id=\"nameField\" className=\"popup__field popup__field_name\" type=\"text\" name=\"name\"\r\n                   placeholder=\"Имя\" value={name} onChange={nameChange}\r\n                   minLength=\"2\" maxLength=\"40\" required/>\r\n            <span id='nameField-error'></span>\r\n            <input id=\"titleField\" className=\"popup__field popup__field_title\" type=\"text\" name=\"about\"\r\n                   placeholder=\"О себе\" value={title} onChange={titleChange}\r\n                   minLength=\"2\" maxLength=\"200\" required/>\r\n            <span id='titleField-error'></span>\r\n        </PopupWithForm>\r\n\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport {useRef} from 'react'\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\n\r\nexport default function EditAvatarPopup (props) {\r\n    const avatarRef = useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n            avatar: avatarRef.current.value\r\n        });\r\n        avatarRef.current.value = '';\r\n    }\r\n    return (\r\n        <PopupWithForm id='popupAvatar' title='Обновить аватар' name='update-avatar'\r\n                       isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button = 'Сохранить'\r\n                       onPopupOverlayClose={props.onPopupOverlayClose} >\r\n            <input id=\"updateField\" className=\"popup__field popup__field_update\" type=\"url\" name=\"link\"\r\n                   placeholder=\"Ссылка на картинку\" required ref={avatarRef} />\r\n            <span id='updateField-error'></span>\r\n        </PopupWithForm>\r\n    );\r\n}","import React, {useEffect} from 'react'\r\nimport {useRef} from 'react'\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\n\r\nexport default function AddPlacePopup (props) {\r\n    const aboutRef = useRef();\r\n    const nameRef = useRef();\r\n\r\n    useEffect(() => {\r\n        nameRef.current.value = '';\r\n        aboutRef.current.value = '';\r\n    }, [props.isOpen]);\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onAddPlace({\r\n            name: nameRef.current.value,\r\n            link: aboutRef.current.value\r\n        });\r\n        nameRef.current.value = '';\r\n        aboutRef.current.value = '';\r\n    }\r\n    return (\r\n        <PopupWithForm id=\"popupAdd\" title='Новое место' name='add-card' isOpen={props.isOpen}\r\n                       onClose={props.onClose} onSubmit={handleSubmit} button = 'Сохранить' onPopupOverlayClose={props.onPopupOverlayClose}>\r\n            <input id=\"placeField\" className=\"popup__field popup__field_add-card popup__field_place\" type=\"text\"\r\n                   name=\"name\" ref={nameRef}\r\n                   placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required/>\r\n            <span id='placeField-error'></span>\r\n            <input id=\"sourceField\" className=\"popup__field popup__field_add-card popup__field_source\"\r\n                   type=\"url\" ref={aboutRef}\r\n                   name=\"link\"\r\n                   placeholder=\"Ссылка на картинку\" required/>\r\n            <span id='sourceField-error'></span>\r\n        </PopupWithForm>\r\n    );\r\n}","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({password,email})\r\n    })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n};\r\n\r\nexport const authorize = (password, email) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({password,email})\r\n    })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n}\r\n\r\nexport const getContent = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n}","import React from 'react';\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n    return (\r\n        <Route>\r\n            {\r\n                () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n            }\r\n        </Route>\r\n    )}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\n\r\nfunction InfoTooltip(props) {\r\n\r\n    return (\r\n        <section className={props.isOpen ? 'popup popup_opened' : 'popup'} onClick={props.onPopupOverlayClose}>\r\n            <div className=\"popup__container\">\r\n                <div className=\"popup__area popup__area_tooltip\">\r\n                    <img className=\"popup__tooltip-icon\" src={props.src} alt=\"иконка результата\"/>\r\n                    <h2 className={`popup__tooltip-text`}>{props.title}</h2>\r\n                    <button className=\"popup__close\" type=\"button\" onClick={props.onClose}/>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","export default __webpack_public_path__ + \"static/media/sucess.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/fail.d4ce2a26.svg\";","import React, {useState} from 'react';\r\n\r\n\r\nexport default function Login({handleLogin}) {\r\n\r\n    const[email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!email || !password){\r\n            return;\r\n        }\r\n        handleLogin(password, email);\r\n    }\r\n\r\n    function handleEmail(evt) {\r\n        setEmail(evt.target.value);\r\n    }\r\n\r\n    function handlePassword(evt) {\r\n        setPassword(evt.target.value);\r\n    }\r\n\r\n    return (\r\n        <form className=\"auth\" method=\"POST\" name=\"login\" onSubmit={handleSubmit} noValidate>\r\n            <h2 className=\"auth__head\">Вход</h2>\r\n            <input className=\"auth__input\" type=\"email\" name=\"email\" placeholder=\"E-mail\" value={email} onChange={handleEmail} />\r\n            <input className=\"auth__input\" type=\"password\" name='password' placeholder=\"Пароль\" value={password} onChange={handlePassword} />\r\n            <button className=\"auth__button\" type=\"submit\">Войти</button>\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\nimport {useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Register({handleRegister}) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        handleRegister(password, email);\r\n    }\r\n\r\n    function handleNewEmail(evt) {\r\n        setEmail(evt.target.value);\r\n    }\r\n\r\n    function handleNewPassword(evt) {\r\n        setPassword(evt.target.value);\r\n    }\r\n\r\n\r\n    return(\r\n\r\n        <form className=\"auth\" method=\"POST\" name=\"register\" onSubmit={handleSubmit} noValidate>\r\n            <h2 className=\"auth__head\">Регистрация</h2>\r\n            <input className=\"auth__input\" type=\"email\" name=\"email\" placeholder=\"E-mail\"  value={email} onChange={handleNewEmail} />\r\n            <input className=\"auth__input\" type=\"password\" name='password' placeholder=\"Пароль\"  value={password} onChange={handleNewPassword} />\r\n            <button className=\"auth__button\" type=\"submit\">Зарегистрироваться</button>\r\n\r\n            <p className=\"auth__question\">Уже зарегистрированы? <Link to=\"/sign-in\" className=\"auth__link\">Войти</Link></p>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport {Route, Switch, Redirect, useHistory} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\nimport Footer from './Footer'\r\nimport ImagePopup from './ImagePopup'\r\nimport ESC_KEYCODE from '../utils/keycode'\r\nimport api from \"../utils/api\";\r\nimport {UserContext} from '../contexts/CurrentUserContext'\r\nimport EditProfilePopup from './EditProfilePopup'\r\nimport EditAvatarPopup from './EditAvatarPopup'\r\nimport AddPlacePopup from './AddPlacePopup'\r\nimport * as auth from '../utils/auth';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport sucess from '../images/sucess.svg';\r\nimport fail from '../images/fail.svg';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\n\r\n\r\nfunction App() {\r\n    const [currentUser, setCurrentUser] = useState({\r\n        name: '',\r\n        about: '',\r\n        avatar: ''\r\n    });\r\n\r\n\r\n    //попапы\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n    const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = useState(false);\r\n    const [isFailTooltipOpen, setIsFailTooltipOpen] = useState(false);\r\n\r\n    //авторизация\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const history = useHistory();\r\n    //карточки\r\n    const [selectedCard, setSelectedCard] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    //получаем информацию о карточках и пользователе\r\n    useEffect(() => {\r\n        if (loggedIn) {\r\n            api.getAllData()\r\n                .then((response => {\r\n                    const [userData, cardsData] = response;\r\n                    setCards(cardsData);\r\n                    setCurrentUser(userData);\r\n                }))\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n\r\n    }, [loggedIn])\r\n    //аутентификация и токен\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            auth.getContent(token)\r\n                .then(data => {\r\n                    if (data) {\r\n                        setEmail(data.data.email);\r\n                        handleLoggedIn();\r\n                        history.push('/');\r\n                    }\r\n                })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history]);\r\n\r\n    //закрытие попапа по оверлею\r\n    function handleOverlayClose(evt) {\r\n        if (evt.target.classList.contains(\"popup\")) {\r\n            closeAllPopups();\r\n        }\r\n    }\r\n\r\n    //обработчик регистрации пользователя\r\n    function handleRegister(password, email) {\r\n        auth.register(password, email)\r\n            .then(data => {\r\n                if (data) {\r\n                    setIsSuccessTooltipOpen(true);\r\n                    setTimeout(() =>\r\n                        setIsSuccessTooltipOpen(false), 2000);\r\n                    history.push('/sign-in');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setIsFailTooltipOpen(true)\r\n                setTimeout(() =>\r\n                    setIsFailTooltipOpen(false), 2000);\r\n            })\r\n    }\r\n\r\n    function handleLoggedIn() {\r\n        setLoggedIn(!loggedIn);\r\n    }\r\n\r\n    //обработчик авторизации пользователя\r\n    function handleLogin(password, email) {\r\n        auth.authorize(password, email)\r\n            .then(data => {\r\n                if (data.token) {\r\n                    setEmail(email);\r\n                    handleLoggedIn();\r\n                    localStorage.setItem('token', data.token);\r\n                    history.push('/');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsFailTooltipOpen(true)\r\n                setTimeout(() =>\r\n                    setIsFailTooltipOpen(false), 2000);\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    //обработчик выхода пользователя\r\n    function handleSignOut() {\r\n        localStorage.removeItem('token');\r\n        setLoggedIn(false);\r\n        setEmail('');\r\n        history.push('/sign-in');\r\n    }\r\n\r\n\r\n    //функционал для открытия и закрытия попапов\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n        console.log(currentUser)\r\n    }\r\n\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n    }\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setSelectedCard(false);\r\n        setIsSuccessTooltipOpen(false);\r\n        setIsFailTooltipOpen(false);\r\n    }\r\n\r\n    //закрытие по esc\r\n    function onKeyPressed(e) {\r\n        if (e.keyCode === ESC_KEYCODE) {\r\n            closeAllPopups();\r\n        }\r\n    }\r\n\r\n    //отрисовка лайков и запрос в api\r\n    function handleCardLike(item) {\r\n        const isLiked = item.likes.some(i => i._id === currentUser._id);\r\n\r\n        api.changeLikeCardStatus(item._id, !isLiked).then((newCard) => {\r\n            const newCards = cards.map((c) => c._id === item._id ? newCard : c);\r\n            setCards(newCards);\r\n        })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n\r\n    //обновление информации о пользователе\r\n    function handleUpdateUser(data) {\r\n        api.saveEditedInfo(data)\r\n            .then((data) => {\r\n                setCurrentUser(data);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //удаление карточки\r\n    function handleCardDelete(item) {\r\n\r\n        api.deleteCard(item._id).then(() => {\r\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n            const newCards = cards.filter((c) => c._id !== item._id);\r\n            // Обновляем стейт\r\n            setCards(newCards);\r\n        })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //обновление аватара\r\n    function handleUpdateAvatar(userData) {\r\n        api.updateAvatar(userData)\r\n            .then((data) => {\r\n                setCurrentUser(data);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    // добавление новой карточки\r\n    function handleAddPlaceSubmit(formData) {\r\n        api.addNewCard(formData)\r\n            .then((newCard) => {\r\n                setCards([newCard, ...cards])\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //обращение к апи\r\n\r\n    return (\r\n        <UserContext.Provider value={currentUser}>\r\n            <div className=\"body\" onKeyDown={onKeyPressed} tabIndex=\"0\">\r\n                <div className=\"page\">\r\n                    <Header email={email} onSignOut={handleSignOut}/>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            {loggedIn ? <Redirect to=\"/\"/> : <Redirect to=\"/sign-in\"/>}\r\n                            <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\r\n                                            onEditProfile={handleEditProfileClick}\r\n                                            onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick}\r\n                                            onCardClick={handleCardClick}\r\n                                            cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete}/>\r\n\r\n                        </Route>\r\n                        <Route path=\"/sign-up\">\r\n                            <Register handleRegister={handleRegister}/>\r\n                        </Route>\r\n                        <Route path=\"/sign-in\">\r\n                            <Login handleLogin={handleLogin}/>\r\n                        </Route>\r\n                    </Switch>\r\n                    <Footer/>\r\n\r\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\r\n                                      onUpdateUser={handleUpdateUser} onPopupOverlayClose={handleOverlayClose}/>\r\n\r\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\r\n                                     onUpdateAvatar={handleUpdateAvatar} onPopupOverlayClose={handleOverlayClose}/>\r\n\r\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\r\n                                   onAddPlace={handleAddPlaceSubmit} onPopupOverlayClose={handleOverlayClose}/>\r\n                    <ImagePopup id='popupImage' card={selectedCard} onClose={closeAllPopups}\r\n                                onPopupOverlayClose={handleOverlayClose}/>\r\n\r\n                    <InfoTooltip title=\"Вы успешно зарегистрировались!\" src={sucess} isOpen={isSuccessTooltipOpen}\r\n                                 onClose={closeAllPopups} onPopupOverlayClose={handleOverlayClose}/>\r\n                    <InfoTooltip title=\"Что-то пошло не так! Попробуйте ещё раз.\" src={fail} isOpen={isFailTooltipOpen}\r\n                                 onClose={closeAllPopups} onPopupOverlayClose={handleOverlayClose}/>\r\n                </div>\r\n            </div>\r\n        </UserContext.Provider>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","//кнопка esc\r\nconst ESC_KEYCODE = 27;\r\nexport default ESC_KEYCODE;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}